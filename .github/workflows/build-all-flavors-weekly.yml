name: Build selected flavors

on:
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at 0AM
  workflow_dispatch:

concurrency:
  group: 'weekly-deploy'
  cancel-in-progress: false

jobs:
  build_time:
    name: Capture current time
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

  versioning:
    name: Extract version
    runs-on: ubuntu-latest
    outputs:
      downstream: ${{ steps.downstream.outputs.version }}
      code: ${{ steps.downstream.outputs.code }}
      upstream: ${{ steps.upstream.outputs.version }}
    env:
      GITHUB_REPOSITORY: ${{ github.action_repository }}
    steps:
      - uses: actions/checkout@v4.2.1
        with:
          submodules: true
      - name: Get downstream (local) version
        id: downstream
        run: |
          echo "version=$(grep -E '^\s*versionName\s*=' composeApp/build.gradle.kts | awk -F '\"' '{print $2}')" >> $GITHUB_OUTPUT
          echo "code=$(grep -E '^\s*versionCode\s*=' composeApp/build.gradle.kts | awk -F '= ' '{print $2}')" >> $GITHUB_OUTPUT
      - name: Get upstream version
        id: upstream
        run: |
          tag_name="$(curl -s https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq -r .tag_name)"
          echo "version=${tag_name#v}" >> $GITHUB_OUTPUT

  verify-version:
    needs: [versioning]
    name: Verify versions
    runs-on: ubuntu-latest
    steps:
      - name: Check if build can proceed
        run: |
          if [ "${{ needs.versioning.outputs.downstream }}" = "${{ needs.versioning.outputs.upstream }}" ]; then
            echo "Versions are equal. Skipping build."
            exit 1
          fi
      - uses: actions/checkout@v4.2.1
        with:
          submodules: true
      - name: Check if changelog exists
        run: |
          if [ ! -e "fastlane/metadata/android/en-US/changelogs/${{ needs.versioning.outputs.code }}.txt" ]; then
            echo "Changelog not found. Exiting."
            exit 1
          fi

  build-full:
    needs: [versioning, verify-version]
    name: Build full version
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1
        with:
          submodules: true

      - name: Copy changelogs into res/raw
        # Job should be canceled if file doesn't exist
        run: cp "fastlane/metadata/android/en-US/changelogs/${{ needs.versioning.outputs.code }}.txt" "composeApp/src/androidMain/res/raw/release_notes.txt"

      - name: Setup Java 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies & build cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          # Cache key has flavor's name to prevent override each other
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Build with Gradle
        run: ./gradlew assembleGithubFull

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.6.2
        with:
          name: unsigned-release
          path: |
            composeApp/build/outputs/apk/github/release/*.apk
            
  build-minified:
    needs: [versioning, verify-version]
    name: Build minified version
    runs-on: ubuntu-latest
    timeout-minutes: 60       # Prevent Github Action from terminating this workflow on first run

    steps:
      - uses: actions/checkout@v4.2.1
        with:
          submodules: true

      - name: Copy changelogs into res/raw
        # Job should be canceled if file doesn't exist
        run: cp "fastlane/metadata/android/en-US/changelogs/${{ needs.versioning.outputs.code }}.txt" "composeApp/src/androidMain/res/raw/release_notes.txt"

      - name: Setup Java 21
        uses: actions/setup-java@v4.7.1
        with:
          java-version: "21"
          distribution: "corretto"

      - name: Restore Gradle dependencies & build cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./build
            ./composeApp/build
          # Cache key has flavor's name to prevent override each other
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Build with Gradle
        run: ./gradlew assembleGithubMinified

      - name: Upload artifacts for signing
        uses: actions/upload-artifact@v4.6.2
        with:
          name: unsigned-uncompressed
          path: |
            composeApp/build/outputs/apk/github/minified/*.apk

  sign-apks:
    name: Sign all built APKs
    needs:
      - build-full
      - build-minified
    runs-on: ubuntu-latest
  
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.3.0
        with:
          path: upstream/unsigned
          merge-multiple: true
  
      - name: Sign APKs
        uses: Tlaster/android-sign@v1.2.2
        with:
          releaseDirectory: upstream/unsigned
  
          signingKeyBase64: "${{ secrets.RELEASE_KEYSTORE }}"
          keyStorePassword: "${{ secrets.RELEASE_KEYSTORE_PASSWD }}"
          alias: "${{ secrets.RELEASE_KEY_ALIAS }}"
          keyPassword: "${{ secrets.RELEASE_KEY_PASSWD }}"
  
          output: signed
        env:
          BUILD_TOOLS_VERSION: "34.0.0"
  
      - name: Remove trails     # remove "-signed"
        run: |
          for filename in signed/*.apk; do mv "$filename" "${filename//-signed}"; done
  
      - name: Upload for release
        uses: actions/upload-artifact@v4.6.2
        with:
          name: signed-apks
          path: signed/*.apk

  upload-to-release:
    needs: [build_time, versioning, sign-apks]
    runs-on: ubuntu-latest
    steps:
      - name: Download signed APKs
        uses: actions/download-artifact@v4.3.0
        with:
          name: signed-apks
      - name: Upload built APK to release
        uses: softprops/action-gh-release@v2
        with:
          files: '*.apk'
          name: v${{ needs.versioning.outputs.downstream }}-${{ needs.build_time.outputs.date }} | Weekly Build
          tag_name: v${{ needs.versioning.outputs.downstream }}
          make_latest: true
          body: |
            ## âœ¨ What's New in v${{ needs.versioning.outputs.downstream }}
            ---
            <div align="center">
              <img alt="N-Zik Logo" src="https://github.com/NEVARLeVrai/N-Zik/blob/main/assets/design/ic_banner2.png?raw=true" width="1000" />
              <p><b>N-Zik</b> - by @NEVARLeVrai</p>
            </div>

            ## ðŸ“² Installation

            Download and install the **full** version.  
            For smaller size, choose the **minified** version.  
            If you encounter any issues, please report them.

            ## ðŸ“¦ Available Builds

            - **Minified** â€“ Lightweight build optimized for performance *(recommended for low-end devices)*  
            - **Full** â€“ Complete build with all components *(recommended if you face installation issues)*  

            ## ðŸ”— Changelog & Downloads

            - Full changelog: [Compare v${{ needs.versioning.outputs.upstream }}...v${{ needs.versioning.outputs.downstream }}](https://github.com/NEVARLeVrai/N-Zik/compare/v${{ needs.versioning.outputs.upstream }}...v${{ needs.versioning.outputs.downstream }})  
            - [Changelog text file](https://github.com/NEVARLeVrai/N-Zik/blob/main/fastlane/metadata/android/en-US/changelogs/${{ needs.versioning.outputs.code }}.txt)

          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
